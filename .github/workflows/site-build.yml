name: Build & Deploy Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'data/*.json'
      - '.github/workflows/**'
      - 'app.py'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build site (best-effort)
        shell: bash
        run: |
          # app.py가 있으면 실행(에러 나도 계속 진행)
          if [ -f app.py ]; then python app.py || true; fi

      # ✅ outputs가 비어 있으면 placeholder index.html 생성 (heredoc 들여쓰기 주의)
      - name: Ensure placeholder index.html in outputs
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p outputs
          if [ -z "$(find outputs -type f 2>/dev/null)" ]; then
cat > outputs/index.html <<'HTML'
<!doctype html><meta charset="utf-8">
<title>버스 시간표</title>
<h1>아직 생성된 시간표가 없습니다</h1>
<p>data 폴더에 *_schedules.json을 추가하면 자동으로 페이지가 생성됩니다.</p>
HTML
            echo "Created placeholder outputs/index.html"
          fi
          echo "=== outputs contents ==="
          ls -al outputs

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./outputs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
